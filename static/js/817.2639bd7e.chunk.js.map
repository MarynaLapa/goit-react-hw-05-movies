{"version":3,"file":"static/js/817.2639bd7e.chunk.js","mappings":"mRAEMA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0iCAwEtB,EAtBiB,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KAClB,OACEC,EAAAA,EAAAA,KAACN,EAAI,CAAAO,SACEF,EAAKG,KAAI,SAAAC,GAAK,OACbC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACID,EAAAA,EAAAA,KAAA,OACIK,IAAKF,EAAMG,aAAY,mCAAAC,OAAsCJ,EAAMG,cAAiB,8EACpFE,IAAKL,EAAMM,KACXC,MAAO,IACLC,OAAQ,OAEdX,EAAAA,EAAAA,KAAA,MAAAC,SAAKE,EAAMM,QACXL,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,eACYD,EAAAA,EAAAA,KAAA,UACXA,EAAAA,EAAAA,KAAA,QAAAC,SAAOE,EAAMS,iBAVZT,EAAMU,QAYV,KAIjB,EChCA,EAlCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BjB,EAAImB,EAAA,GAAEE,EAAOF,EAAA,GAEpBG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAsB1B,OApBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,eAAA5B,GAAA6B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGI,OAHJF,EAAAC,KAAA,EAGZR,GAAW,GAAKO,EAAAE,KAAA,GACGC,EAAAA,EAAAA,IAAWpB,GAAQ,OAAhCgB,EAAIC,EAAAI,KACVf,EAAQU,EAAK/B,MAAKgC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAGlBM,QAAQC,MAAKP,EAAAK,IACb,QAEiB,OAFjBL,EAAAC,KAAA,GAEAR,GAAW,GAAMO,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAEpB,kBAbY,OAAA/B,EAAA2C,MAAA,KAAAC,UAAA,KAeb5B,GAAWY,GAEb,GAAG,CAACZ,KAGFV,EAAAA,EAAAA,MAAAuC,EAAAA,SAAA,CAAA1C,SAAA,CACGsB,IAAWvB,EAAAA,EAAAA,KAAA,MAAAC,SAAI,eACN,OAATF,IAAiBC,EAAAA,EAAAA,KAAC4C,EAAQ,CAAC7C,KAAMA,MAGxC,C","sources":["components/PageParts/CastList.jsx","components/PageParts/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\"\n\nconst List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    row-gap: 24px;\n    column-gap: 40px;\n    justify-content: space-evenly;\n\n    li {\n        background-color: #f8ecd7;\n        flex-basis: 200px;\n        border: 1px solid rgba(240, 212, 159, 0.863);\n        border-radius: 4px;\n        box-shadow:  0 4px 12px  rgba(240, 212, 159, 0.3), 0 4px 12px  rgba(240, 212, 159, 0.3);\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        border-top-left-radius: 80px;\n        border-bottom-right-radius: 80px;\n    }\n\n    li:hover{\n        transform: scale(1.05);\n    }\n\n    img {\n        margin-bottom: 8px;\n        margin-bottom: 8px;\n        border-top-left-radius: 80px;\n    }\n\n    h3 {\n        text-align: center;\n        font-weight: 500;\n        padding: 0 8px;\n        margin-bottom: 8px;\n        height: 60px;\n        font-size: 20px;\n    }\n\n    p {\n        width: 144px;\n        padding: 0 8px;\n        font-weight: 500;\n    }\n\n    span {\n        font-size: 16px;\n        font-weight: 400;\n    }\n\n`\n\nconst CastList = ({ cast }) => {\n  return (\n    <List>\n          {cast.map(actor =>\n            <li key={actor.cast_id}>\n                <img\n                    src={actor.profile_path ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}` : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'}\n                    alt={actor.name}\n                    width={200}\n                      height={300}\n                />\n                <h3>{actor.name}</h3>\n                <p>\n                    Character: <br />\n                    <span>{actor.character}</span>\n                </p>\n            </li>\n        )}\n    </List>\n  )\n}\n\nexport default CastList\n\n","import { getCredits } from \"components/api/movies\"\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport CastList from \"./CastList\"\n\n\nconst Cast = () => {\n  const { movieId } = useParams()\n  const [cast, setCast] = useState(null)\n  // const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n  \n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        // setError('')\n        setLoading(true)\n        const data = await getCredits(movieId)\n        setCast(data.cast)\n             \n      } catch (error) {\n        console.error(error)\n        // setError(error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    movieId && getCast()\n   \n  }, [movieId])\n\n  return (\n    <>\n      {loading && <h1>Loading...</h1>}\n      {cast !== null && <CastList cast={cast} />}\n    </>    \n  )\n}\n\nexport default Cast"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","_ref","cast","_jsx","children","map","actor","_jsxs","src","profile_path","concat","alt","name","width","height","character","cast_id","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","loading","setLoading","useEffect","getCast","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getCredits","sent","t0","console","error","finish","stop","apply","arguments","_Fragment","CastList"],"sourceRoot":""}